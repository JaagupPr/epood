openapi: 3.0.2
info:
    title: ShopTARge23
    version: 1.0.0
    description: Shop api
paths:
    /products:
        get:
            tags:
                - products
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of products:
                                    value: |4-
                                         [
                                         'Macbook m4 max', 
                                         'Iphone 16 pro max',
                                         'Samsung galaxy s21 fe',
                                         'Hp Spectre x360 14'
                                         ]
                    description: Return a list of products
            summary: Get list of all products from api
            description: Returns list of all products in the API to the requesting user.
        post:
            requestBody:
                description: Data of Product that the user wants to add
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/product'
                        examples:
                            Example of a product:
                                value:
                                    ProductName: Hp Spectre x360 14
                                    ProductCategory: Laptop
                                    ProductPrice: '1399.99'
                                    ProductDescription: a pc
                                    ImageURL: >-
                                        https://vsf-api.klick.ee/img/806/1000/resize/m/a/macbook_air_13_in_space_gray_pdp_image_position-1__wwen_2.jpg
                                    ReleaseDateEU: '2024-01-11'
                required: true
            tags:
                - products
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Product that is added:
                                    value:
                                        ProductId: 4
                                        ProductName: Hp Spectre x360 14
                                        ProductCategory: Laptop
                                        ProductPrice: 1399.99
                                        ProductDescription: a pc
                                        ImageURL: >-
                                            https://vsf-api.klick.ee/img/806/1000/resize/m/a/macbook_air_13_in_space_gray_pdp_image_position-1__wwen_2.jpg
                                        ReleaseDateEU: 11.01.2024
                    description: Return code 201 to user. if creation of new product was successful
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters error:
                                    value:
                                        error: One or multiple parameters are missing
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing'
            summary: add new product
            description: adds a new product into the array
    '/products/{id}':
        description: ''
        get:
            tags:
                - products
            parameters:
                -
                    examples:
                        Example of Id of Product:
                            value: '1'
                    name: id
                    description: Id of product the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of product with details:
                                    value:
                                        ProductId: '1'
                                        ProductName: Macbook m4 max
                                        ProductCategory: Computer
                                        ProductPrice: 3499
                                        ProductDescription: a macbook
                                        ImageURL: >-
                                            https://vsf-api.klick.ee/img/806/1000/resize/m/a/macbook_air_13_in_space_gray_pdp_image_position-1__wwen_2.jpg
                                        ReleaseDateEU: 11.01.2024
                    description: returns details of the product to the user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Product //list was not found ':
                                    value:
                                        -
                                            error: Product list was not found in product array
                    description: Returns error 404 to the user if Product with this id is not found
            summary: Get full details of a product
            description: Returns full details of a given id product
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/product'
                        examples:
                            Example of a product:
                                value:
                                    ProductId: 4
                                    ProductName: Hp Spectre x360 14
                                    ProductCategory: Computer
                                    ProductPrice: 1399
                                    ProductDescription: a computer
                                    ImageURL: 'https:'
                                    ReleaseDateEU: 10.09.2021
                required: true
            tags:
                - products
            parameters:
                -
                    examples:
                        Id of product:
                            value: '1'
                    name: id
                    description: Id of product to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of product with details:
                                    value:
                                        ProductId: 1
                                        ProductName: Macbook m4 max
                                        ProductCategory: Computer
                                        ProductPrice: 3499
                                        ProductDescription: a pc
                                        ImageURL: >-
                                            https://vsf-api.klick.ee/img/806/1000/resize/m/a/macbook_air_13_in_space_gray_pdp_image_position-1__wwen_2.jpg
                                        ReleaseDateEU: 11.01.2024
                    description: Returns the modified Product to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: |
                        User has not added required parameters to the modified product
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: one or multiple parameters are missing
                    description: The Product to be updated is not found in the array
            operationId: id
            summary: Update a Product
            description: 'Returns updated product, when modification of a product is successful.'
        delete:
            requestBody:
                description: Id of product that is to be deleted
                content:
                    application/json:
                        schema:
                            type: integer
                        examples:
                            Id of Product to be deleted:
                                value: '1'
                required: true
            tags:
                - products
            parameters:
                -
                    examples:
                        Example of id of product:
                            value: '1'
                    name: id
                    description: Id of product the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                successful error:
                                    value:
                                        error: no content
                    description: 'returned error, in case deletion was successful'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Product /w+ was not found:':
                                    value:
                                        error: Product not found
                    description: Product with this id was not found
            summary: Delete a specific product
            description: Deletes a product from the array based on given id
        parameters:
            -
                examples:
                    Example of id of product:
                        value: '1'
                name: id
                description: Id of product the user has requested
                schema:
                    type: integer
                in: path
                required: true
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of users:
                                    value: |4-
                                         [
                                         'Gordon Freeman', 
                                         'David attenborough',
                                         'Elon Musk',
                                         'Mark Zuckerberg'
                                         ]
                    description: 'Return status code 200 to the user, with list of Users'
            summary: Get list of all users from api
            description: |
                Returns a list of all users in the system
        post:
            requestBody:
                description: Data of the user to be added
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/error'
                        examples:
                            Example of  a user:
                                value:
                                    -
                                        error: one or multiple parameters missing
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                User that is added:
                                    value:
                                        UserID: 4
                                        FirstName: Mark
                                        LastName: Zuckerberg
                                        Email: Mark.Zuckerberg@gmail.com
                                        PhoneNumber: '+44777123234'
                                        Address: 'Palo Alto, California, USA'
                                        UserType: Seller
                                        Password: Jicnaoxqp012o
                    description: 'Return code 201, if user was added successfully'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: 'Return code 400, if request is missing a required data field'
            summary: Add a new user
            description: Adds a new user to the system.
    '/users/{Id}':
        get:
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of id of user:
                            value: '1'
                    name: Id
                    description: |
                        id of the user to retrieve.
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of Id of user:
                                    value:
                                        UserID: 4
                                        FirstName: Mark
                                        LastName: Zuckerberg
                                        Email: Mark.Zuckerberg@gmail.com
                                        PhoneNumber: '+44777123234'
                                        Address: 'Palo Alto, California, USA'
                                        UserType: Seller
                                        Password: Jicnaoxqp012o
                    description: Returns a single user with details by its ID.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                No id of user given:
                                    value:
                                        error: user id not given
                    description: 'Return code 400, if ID of User is not given'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User not found:
                                    value:
                                        error: user not found
                    description: 'Returns error 404, if user by that ID does not exist'
            summary: Get full details of a user
            description: Returns details of the user by their ID.
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        examples:
                            Example of a user:
                                value:
                                    UserID: 4
                                    FirstName: Mark
                                    LastName: Zuckerberk
                                    Email: Mark.Zuckerberg@gmail.com
                                    PhoneNumber: '+44777123234'
                                    Address: 'Palo Alto, California, USA'
                                    UserType: Seller
                required: true
            tags:
                - users
            parameters:
                -
                    examples:
                        Id of user:
                            value: '1'
                    name: Id
                    description: Id of user to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a user:
                                    value:
                                        UserID: 4
                                        FirstName: Mark
                                        LastName: Zuckerberk
                                        Email: Mark.Zuckerberg@gmail.com
                                        PhoneNumber: '+44777123234'
                                        Address: 'Palo Alto, California, USA'
                                        UserType: Seller
                                        Password: Jicnaoxqp012o
                    description: 'Returns the modified user '
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: the modified user does not have the required parameters added.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: one or multiple parameters are missing
                    description: The user to be updated is not found.
            operationId: id
            summary: Update a user
            description: 'Returns updated user, when modification of user is successful'
        delete:
            requestBody:
                description: Id of user that is going to be deleted
                content:
                    application/json:
                        schema:
                            type: integer
                        examples:
                            Id of user to be deleted:
                                value: Id
                required: true
            tags:
                - users
            parameters:
                -
                    examples:
                        Example of Id of user:
                            value: '1'
                    name: Id
                    description: Id of user the system has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Successful error:
                                    value:
                                        error: no content
                    description: return error in case deletion of user was successful
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User not found:
                                    value:
                                        error: Product does not exist
                    description: User with this id was not found
            summary: Delete a specific user
            description: Deletes a user from the system based in given id
        parameters:
            -
                examples:
                    Example of id of user:
                        value: '1'
                name: Id
                description: Id of user that the system has requested
                schema:
                    type: integer
                in: path
                required: true
    /orders:
        description: ''
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                List of orders:
                                    value: |4-
                                         [
                                         '1', 
                                         '2',
                                         '3',
                                         '4'
                                         ]
                    description: Return a list of all orders in the system.
            summary: Get list of all orders
            description: Returns a list of all orders in the system.
        post:
            requestBody:
                description: Data of the order to be added
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/error'
                        examples:
                            Example of a order:
                                value:
                                    -
                                        error: one or multiple parameters missing
                required: true
            tags:
                - orders
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Orders that have been added:
                                    value:
                                        UserID: 1
                                        OrderDate: 11.01.2024
                                        TotalAmount: 1459
                                        OrderStatus: Completed
                                        ShippingAddress: '1234 Elm Street, New York, China'
                                        PaymentStatus: Paid
                    description: 'Return code 201, if order was added successfully'
                '400':
                    description: 'Return status 400, if request is missing parameters'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Order was not found:
                                    value:
                                        error: order not found
                    description: 'Return status code 404, if one of the orders is missing'
            summary: Add a new order
            description: Adds a new order to the system.
    '/orders/{Id}':
        get:
            tags:
                - orders
            parameters:
                -
                    examples:
                        Example of id of order:
                            value: '1'
                    name: Id
                    description: id of order the system has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of order with details:
                                    value:
                                        UserID: 1
                                        OrderDate: 11.01.2024
                                        TotalAmount: 1459
                                        OrderStatus: Completed
                                        ShippingAddress: '1234 Elm Street, New York, China'
                                        PaymentStatus: Paid
                    description: returns code 200 to user if order exists.
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Order list was not found:
                                    value:
                                        -
                                            error: order was not found in the system
                    description: 'Returns error 404, if order with this id does not exist'
            summary: Get full details of order
            description: Returns full details of a given order
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order'
                        examples:
                            Example of order with details:
                                value:
                                    UserID: 1
                                    OrderDate: 11.01.2024
                                    TotalAmount: 1459
                                    OrderStatus: Completed
                                    ShippingAddress: '1234 Elm Street, New York, China'
                                    PaymentStatus: Paid
                required: true
            tags:
                - orders
            parameters:
                -
                    examples:
                        Id of order:
                            value: '1'
                    name: Id
                    description: Id of order to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of order with details:
                                    value:
                                        UserID: 1
                                        OrderDate: 11.01.2024
                                        TotalAmount: 1459
                                        OrderStatus: Completed
                                        ShippingAddress: '1234 Elm Street, New York, China'
                                        PaymentStatus: Paid
                    description: Returns the modified order to the system
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: |4
                         the system has not added required parameters to the modified order
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: The order to be updated is not found in the system
            operationId: id
            summary: Update a order
            description: 'Return updated order, when modification of order is successful'
        delete:
            requestBody:
                description: Id of order that is about to be deleted
                content:
                    application/json:
                        schema:
                            type: integer
                        examples:
                            Id of order that is to be deleted:
                                value: Id
                required: true
            tags:
                - orders
            parameters:
                -
                    examples:
                        Example of id of product:
                            value: '1'
                    name: Id
                    description: id of order the system has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: no content
                    description: Returns error incase deletion was successful
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Order was not found:
                                    value:
                                        error: Order was not found
                    description: Returns code 404 if order with this id is not found
            summary: Delete a specific order
            description: Deletes a order from the system based on given id
        parameters:
            -
                examples:
                    Example of id of order:
                        value: '1'
                name: Id
                description: id of order the system has requested
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            required:
                - error
            type: object
            properties:
                error:
                    type: string
            example:
                error: error message
        product:
            description: Example of a valid product
            required:
                - ProductCategory
                - ProductName
                - ProductPrice
                - ReleaseDateEU
                - ProductId
                - ProductDescription
                - ImageURL
            type: object
            properties:
                ProductName:
                    description: ' The name of the product'
                    type: string
                ProductCategory:
                    description: ' The category of the product'
                    type: string
                ProductPrice:
                    format: float
                    description: ' The price of the product in EUR'
                    type: number
                ReleaseDateEU:
                    format: date
                    description: ' The release date of the product in EU format'
                    type: string
                ProductId:
                    description: ' Id of the product'
                    type: integer
                ProductDescription:
                    description: description of product
                    type: string
                ImageURL:
                    description: Url to product image
                    type: string
            example:
                ProductId: '1'
                ProductName: Macbook m4 max
                ProductCategory: Computer
                ProductPrice: 3499
                ProductDescription: a macbook
                ImageURL: >-
                    https://vsf-api.klick.ee/img/806/1000/resize/m/a/macbook_air_13_in_space_gray_pdp_image_position-1__wwen_2.jpg
                ReleaseDateEU: 11.01.2024
        user:
            description: Example of valid user
            required:
                - FirstName
                - UserID
                - LastName
                - Email
                - PhoneNumber
                - Address
                - UserType
                - Password
            type: object
            properties:
                UserID:
                    description: ' The unique identifier of the user'
                    type: integer
                FirstName:
                    description: ' The first name of the user'
                    type: string
                LastName:
                    description: ' The last name of the user'
                    type: string
                Email:
                    format: email
                    description: ' The email address of the user'
                    type: string
                PhoneNumber:
                    description: ' The phone number of the user'
                    type: string
                Address:
                    description: ' The home address of the user'
                    type: string
                UserType:
                    description: ' The type of the user'
                    type: string
                Password:
                    format: password
                    description: ' Users password for authentication'
                    type: string
            example: |-
                {
                    "UserID": 4,
                    "FirstName": "Mark",
                    "LastName": "Zuckerberk",
                    "Email": "Mark.Zuckerberg@gmail.com",
                    "PhoneNumber": "+44777123234",
                    "Address": "Palo Alto, California, USA",
                    "UserType": "Seller"
                    "Password": "dlkowekw32"
                }
        order:
            description: Example of valid order.
            required:
                - UserID
                - OrderDate
                - TotalAmount
                - OrderStatus
                - ShippingAddress
                - PaymentStatus
            type: object
            properties:
                UserID:
                    description: Id of a user
                    type: string
                OrderDate:
                    format: date-time
                    description: Date of a order
                    type: string
                TotalAmount:
                    description: ''
                    type: string
                OrderStatus:
                    description: ''
                    type: string
                ShippingAddress:
                    description: ''
                    type: string
                PaymentStatus:
                    description: ''
                    type: string
            example:
                UserID: 1
                OrderDate: 11.01.2024
                TotalAmount: 1459
                OrderStatus: Completed
                ShippingAddress: '1234 Elm Street, New York, China'
                PaymentStatus: Paid
